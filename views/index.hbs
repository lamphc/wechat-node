<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>js-sdk使用</title>
  <link rel="stylesheet" href="css/index.css">
  <!-- 引入 WeUI CDN 链接 -->
  <link rel="stylesheet" href="https://res.wx.qq.com/open/libs/weui/2.3.0/weui.min.css"/>
</head>

<body>

  <div id="app">
    <img class="pt" src="" alt="">
    <button class="takePhoto weui-btn weui-btn_primary">拍照</button>
    <button class="scan weui-btn weui-btn_primary">扫码</button>
    <button class="pay weui-btn weui-btn_primary">支付</button>
  </div>

  {{!-- 引入js-sdk --}}
  <script src="libs/jweixin-1.6.0.js"></script>
  <script> 
    console.log('开始验证','{{signature}}')
    wx.config({
      debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
      appId: '{{appId}}', // 必填，公众号的唯一标识
      timestamp: {{timestamp}}, // 必填，生成签名的时间戳
      nonceStr: '{{nonceStr}}', // 必填，生成签名的随机串
      signature: '{{signature}}',// 必填，签名
      jsApiList: [
        'chooseImage',
        'scanQRCode',
        'chooseWXPay',
        'updateAppMessageShareData'
      ] // 必填，需要使用的JS接口列表
    });
    wx.ready(function(){
    // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
    console.log('验证成功！可以使用JS-SDK API！')
    // 使用高级能力
    // 1. 拍照
    let tp = document.querySelector('.takePhoto');
    tp.addEventListener('click',()=>{
      wx.chooseImage({
          count: 1, // 默认9
          sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
          success: function (res) {
          var localIds = res.localIds; // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片
          console.log('pt:',localIds)
          document.querySelector('.pt').src=localIds[0]
          }
        });
    })

    // 2. 扫码
    let scan = document.querySelector('.scan');
    scan.addEventListener('click',()=>{
      wx.scanQRCode({
        needResult: 1, // 默认为0，扫描结果由微信处理，1则直接返回扫描结果，
        scanType: ["qrCode","barCode"], // 可以指定扫二维码还是一维码，默认二者都有
        success: function (res) {
          var result = res.resultStr; // 当needResult 为 1 时，扫码返回的结果
            }
     });

    })

    // 3. 支付
    let pay = document.querySelector('.pay');
    pay.addEventListener('click',()=>{
      /*
       * 1. 调用后台接口获取支付需要的数据
       * 2. 调用wx.chooseWXPay支付
      */
      wx.chooseWXPay({
      timestamp: 0, // 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符
      nonceStr: '', // 支付签名随机串，不长于 32 位
      package: '', // 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=\*\*\*）
      signType: '', // 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'
      paySign: '', // 支付签名
      success: function (res) {
        // 支付成功后的回调函数
      }
    });

    })

    // 其它API（自定义分享）
    wx.updateAppMessageShareData({ 
      title: '来黑马学前端！', // 分享标题
      desc: '前端前途无量！', // 分享描述
      link: 'http://localhost:3000', // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
      imgUrl: 'http://t7.baidu.com/it/u=3616242789,1098670747&fm=79&app=86&f=JPEG?w=900&h=1350', // 分享图标
      success: function () {
        // 设置成功
       // alert('分享成功！')
      }
    })

    });

    wx.error(function(res){
  // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
  console.log('error:', res)
});

  </script>
</body>

</html>